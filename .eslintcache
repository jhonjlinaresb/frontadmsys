[{"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\index.js":"1","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\App.js":"2","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\reportWebVitals.js":"3","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\components\\Footer\\Footer.jsx":"5","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Home\\Home.jsx":"6","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Login\\Login.jsx":"7","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Register\\Register.jsx":"8","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Profile\\Profile.jsx":"9","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Panel\\Tickets\\Tickets.jsx":"10","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\ViewUser\\ViewUser.jsx":"11","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Error404\\Error404.jsx":"12","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\guards\\PrivateZone.jsx":"13","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\guards\\CheckPrivileges.jsx":"14","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Users\\Users.jsx":"15","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\showTickets\\showTickets.jsx":"16","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\ShowTickets\\ShowTickets.jsx":"17","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Admin\\Admin.jsx":"18","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Inventory\\Inventory.jsx":"19","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\ShowInventory\\ShowInventory.jsx":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":2945,"mtime":1610672122650,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1030,"mtime":1610644253351,"results":"25","hashOfConfig":"22"},{"size":291,"mtime":1608928055852,"results":"26","hashOfConfig":"22"},{"size":802,"mtime":1609187103118,"results":"27","hashOfConfig":"22"},{"size":2430,"mtime":1610657256116,"results":"28","hashOfConfig":"22"},{"size":3836,"mtime":1609021742392,"results":"29","hashOfConfig":"22"},{"size":4107,"mtime":1610656237564,"results":"30","hashOfConfig":"22"},{"size":6009,"mtime":1610656352929,"results":"31","hashOfConfig":"22"},{"size":2683,"mtime":1610661607997,"results":"32","hashOfConfig":"22"},{"size":160,"mtime":1609868325074,"results":"33","hashOfConfig":"22"},{"size":208,"mtime":1609887809656,"results":"34","hashOfConfig":"22"},{"size":373,"mtime":1610658301810,"results":"35","hashOfConfig":"22"},{"size":1204,"mtime":1610669905759,"results":"36","hashOfConfig":"22"},{"size":1139,"mtime":1610650853929,"results":"37","hashOfConfig":"22"},{"size":1964,"mtime":1610669900973,"results":"38","hashOfConfig":"22"},{"size":3185,"mtime":1610672247770,"results":"39","hashOfConfig":"22"},{"size":9245,"mtime":1610669656311,"results":"40","hashOfConfig":"22"},{"size":2597,"mtime":1610672878180,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jlbb3u",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\index.js",[],["88","89"],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\App.js",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\reportWebVitals.js",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Home\\Home.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Login\\Login.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Register\\Register.jsx",["90","91"],"import React, { useState } from 'react';\r\nimport { Form, Input, Button, notification } from 'antd';\r\nimport { Card } from 'antd';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\nconst Register = () => {\r\n    const onFinish = (user) => {\r\n        axios.post(process.env.REACT_APP_BASE_URL+'/users/register', user)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                notification.success({ message :'Usuario registrado',description:'Usuario registrado con éxito'})\r\n            }).catch(error => {\r\n                notification.error({ message: 'Error en el registro', description: 'Hubo un error al tratar de registrar al usuario, revisa tus campos' })\r\n            })\r\n            \r\n    };\r\n     \r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);  \r\n    };\r\n    return (\r\n        <div className=\"block\">\r\n        <div className=\"site-card-border-less-wrapper\" style={{ textAlign: 'center', display: 'flex', padding: '30px', justifyContent: 'center'}}>\r\n       <Card className=\"box\" title=\"Register\" bordered={false} style={{ width: 400, textAlign: 'center' }}>\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n\r\n            <Form.Item\r\n                label=\"Nombre\"\r\n                name=\"name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Por favor introduzca su nombre!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n                </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Por favor introduzca su email!',\r\n                    },\r\n                    {\r\n                        type:'email',\r\n                        message: 'El campo debe ser un email',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Contraseña\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Por favor introduzca su contraseña!',\r\n                    },\r\n                    {\r\n                        pattern:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,10}$/, \r\n                        message: 'Su contraseña debe contener al menos una minúscula, una mayúscula, un número,un carácter especial, y debe estar entre 8 y 10 carácteres de longitud!',\r\n                    }\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"DNI\"\r\n                name=\"dni\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Por favor introduzca su DNI...',\r\n                    },\r\n                ]}\r\n                >\r\n            <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                   Register\r\n        </Button>\r\n            </Form.Item>\r\n            \r\n        </Form>\r\n        </Card>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Profile\\Profile.jsx",["92","93","94","95"],"import { Link } from 'react-router-dom';\r\nimport './Profile.scss'\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Pagination, Col } from 'antd';\r\n\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  DeleteOutlined,\r\n  UserOutlined,\r\n  PoweroffOutlined,\r\n  EyeOutlined,\r\n  KeyOutlined,\r\n  SyncOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { Content, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\n  const Profile = ({ user }) => {\r\n\r\n      const [tickets, userTickets] = useState([]);\r\n      useEffect(() => {\r\n          \r\n              console.log(JSON.stringify(user));\r\n              console.log('path tickets : '+process.env.REACT_APP_BASE_URL+'/users/'+user.dni+'/tickets')\r\n              axios.get(process.env.REACT_APP_BASE_URL+'/users/'+user.dni+'/tickets',{})\r\n              .then(res=>userTickets(res.data.ticket));\r\n  \r\n          \r\n      }, [])\r\n      \r\n  const deleteOne = ( ObjectId ) => {\r\n    console.log(ObjectId);\r\n    let a = ObjectId._id;\r\n    console.log(a);\r\n     console.log('path Variable : '+process.env.REACT_APP_BASE_URL+'/users'+'/tickets/'+a)\r\n      axios.delete(process.env.REACT_APP_BASE_URL+'/users'+'/tickets/'+a,{})\r\n      .then(res=>userTickets(res.data.a));\r\n    \r\n      \r\n  }\r\n  \r\n  \r\n  const { Column, ColumnGroup } = Table;\r\n    \r\n    \r\n    return (\r\n        <>\r\n      <Layout style={{ minHeight: '90vh' }}>\r\n        <Sider>\r\n          <div className=\"logo\" />\r\n          \r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n          \r\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n            View Tickets <Link to=\"/profile\" /> \r\n            </Menu.Item>\r\n\r\n            \r\n            <Menu.Item  key=\"2\" icon={<DesktopOutlined />}>\r\n              Create Ticket <Link to=\"/tickets\"/>\r\n            </Menu.Item>\r\n\r\n            <SubMenu key=\"sub1\" defaultSelected=\"true\" icon={<UserOutlined />} title=\"User\">\r\n              <Menu.Item key=\"3\" icon={<EyeOutlined />}>\r\n\t\t        View <Link to=\"viewuser\"/>\r\n\t          </Menu.Item>\r\n              <Menu.Item key=\"4\" icon={<PoweroffOutlined />}>\r\n                Logout <Link to=\"/\" />\r\n                </Menu.Item>\r\n            </SubMenu>\r\n\r\n            <Menu.Item key=\"9\" icon={<KeyOutlined />}>\r\n              Admin <Link to=\"/admin\" />\r\n            </Menu.Item>\r\n          </Menu>\r\n          \r\n        </Sider>\r\n\r\n        <div>\r\n           <Layout className=\"site-layout\">\r\n            <Content id=\"cont1\" style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>Panel</Breadcrumb.Item>\r\n              <Breadcrumb.Item>Tickets</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            \r\n            <div className=\"site-layout-background\" style={{ margin: '0 16px' }}>\r\n              View Tickets\r\n              <Col>\r\n              <Table dataSource={tickets} pagination={{ pageSize: 5 }}>\r\n                  <ColumnGroup title=\"Tickets\">\r\n                    \r\n                  <Column title=\"Status\" dataIndex=\"status\" key='status'\r\n                  render={() => (<SyncOutlined spin />)} />\r\n                  <Column title=\"Date\" dataIndex=\"date\" key='date' />\r\n                  <Column title=\"Hour\" dataIndex=\"hour\" key='hour' />\r\n                  <Column title=\"Error\" dataIndex=\"observations\" key='observations' />\r\n                  <Column title=\"Text\" dataIndex=\"text\" key='text' />\r\n                  <Column title=\"DNI\" dataIndex=\"dni\" key='dni' />\r\n                  </ColumnGroup>\r\n\r\n    \r\n            <Column\r\n              title=\"Action\"\r\n              key=\"action\"\r\n              render={(ObjectId) => (\r\n                  <a href=\"/profile\">\r\n                  <button onClick={() => deleteOne(ObjectId)}><DeleteOutlined /></button></a>\r\n                \r\n              )}\r\n            />\r\n            \r\n          </Table>\r\n          </Col>\r\n  \r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n        </div>\r\n        \r\n      </Layout>\r\n    </>);\r\n  }\r\n\r\n\r\nexport default Profile;","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Panel\\Tickets\\Tickets.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\ViewUser\\ViewUser.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Error404\\Error404.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\guards\\PrivateZone.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\guards\\CheckPrivileges.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Users\\Users.jsx",["96","97"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Table, Space } from 'antd';\r\n\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('authToken');\r\n        axios.get(process.env.REACT_APP_BASE_URL+'/users/showAll',{\r\n            \r\n        }).then(res=>setUsers(res.data));\r\n    }, [])\r\n\r\n    \r\n\r\nconst Column = Table;\r\n\r\n\r\n\r\nreturn(\r\n  <>\r\n  <Link style={{color: 'black', margin: '2px'}}to=\"/admin\"><button><ArrowLeftOutlined />Back to Admin</button></Link>\r\n  <Table dataSource={users} pagination={{pageSize: 8}}>\r\n      <Column title=\"User Id\" dataIndex=\"_id\" key='_id' />\r\n      <Column title=\"Name\" dataIndex=\"name\" key=\"name\" />\r\n    <Column title=\"Email\" dataIndex=\"email\" key='email' />\r\n    <Column title=\"DNI\" dataIndex=\"dni\" key='dni' />\r\n    \r\n    <Column\r\n      title=\"Action\"\r\n      key=\"action\"\r\n      render={() => (\r\n        <Space size=\"middle\">\r\n          <a>Delete</a>\r\n        </Space>\r\n      )}\r\n    />\r\n  </Table>\r\n  </>\r\n);\r\n    \r\n    \r\n}\r\n\r\nexport default Users;","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\showTickets\\showTickets.jsx",["98","99"],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\ShowTickets\\ShowTickets.jsx",["100","101"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Table } from 'antd';\r\n\r\nimport {\r\n  CheckOutlined,\r\n  SyncOutlined,\r\n  ArrowLeftOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst ShowTickets = ( ) => {\r\n    const [ viewtickets, setTickets ] = useState([]);\r\n    useEffect(() => {\r\n          \r\n      axios.get(process.env.REACT_APP_BASE_URL+'/users/tickets',{\r\n            \r\n      }).then(res=>setTickets(res.data));\r\n            }, [])\r\n      \r\n      const deleteOne = ( ObjectId ) => {\r\n      console.log(ObjectId);\r\n      let a = ObjectId._id;\r\n      console.log(a);\r\n      console.log('path Variable : '+process.env.REACT_APP_BASE_URL+'/users'+'/tickets/'+a)\r\n      axios.delete(process.env.REACT_APP_BASE_URL+'/users'+'/tickets/'+a,{})\r\n      .then(res=>setTickets(res.data.a));\r\n       }\r\n  \r\n       const Column = Table;\r\nreturn (\r\n    <>\r\n    <Link style={{color: 'black', margin: '2px'}}to=\"/admin\"><button><ArrowLeftOutlined />Back to Admin</button></Link>\r\n    <Table dataSource={viewtickets} pagination={{pageSize: 8}}>\r\n    <Column title=\"Ticket Id\" dataIndex=\"_id\" key='_id' />\r\n    <Column title=\"Status\" dataIndex=\"status\" key='status'\r\n    render={() => (<SyncOutlined spin />)} />\r\n    <Column title=\"date\" dataIndex=\"date\" key='date' />\r\n    <Column title=\"hour\" dataIndex=\"hour\" key='hour' />\r\n    <Column title=\"Observations\" dataIndex=\"observations\" key='observations' />\r\n    <Column title=\"Text\" dataIndex=\"text\" key='text' />\r\n    <Column title=\"DNI\" dataIndex=\"dni\" key='dni' />\r\n\r\n    \r\n    <Column\r\n              title=\"Finish\"\r\n              key=\"action\"\r\n              render={(ObjectId) => (\r\n                  <a href=\"/showtickets\">\r\n                  <button onClick={() => deleteOne(ObjectId)}><CheckOutlined /></button></a>\r\n                \r\n              )}\r\n            />\r\n  </Table>\r\n  \r\n  \r\n  </>\r\n);\r\n}\r\n    \r\n    \r\n\r\nexport default ShowTickets;","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Admin\\Admin.jsx",[],"C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\Inventory\\Inventory.jsx",["102","103","104","105"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { Form, Input, Button, notification, Switch } from 'antd';\r\n\r\nimport { DatePicker , Select} from 'antd';\r\nimport axios from 'axios';\r\nimport {ArrowLeftOutlined} from '@ant-design/icons';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst {  Sider, Content } = Layout;\r\nconst { Option } = Select;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nconst Inventory = ({ user }) => {\r\n\r\n    const onFinish = (inventoryData) => {\r\n        let inventory = {\r\n            'status': inventoryData.status,\r\n            'date': inventoryData.date,\r\n            'observations': inventoryData.observations,\r\n            'text': inventoryData.text,\r\n            'mark': inventoryData.mark,\r\n            'model': inventoryData.model,\r\n            'serial': inventoryData.serial,\r\n            'so': inventoryData.so,\r\n            'ram': inventoryData.ram,\r\n            'processor': inventoryData.processor,\r\n            'disk': inventoryData.disk,\r\n            'price': inventoryData.price,\r\n            'hdv': inventoryData.hdv,\r\n            'user': inventoryData.user\r\n        }\r\n        console.log('inventory: '+JSON.stringify(inventory));\r\n        console.log('user: '+JSON.stringify(user));\r\n        axios.post(process.env.REACT_APP_BASE_URL+'/:user/inventory', inventory)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                notification.success({ message :'Inventory Create Succesfuly',description:'Inventory Create'})\r\n            }).catch(error => {\r\n                notification.error({ message: 'Error to create Inventory', description: 'Error to create' })\r\n            })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);  \r\n    };\r\n    return (\r\n      <>\r\n      \r\n      <Layout>\r\n      <Link style={{color: 'black', margin: '2px'}}to=\"/admin\"><button><ArrowLeftOutlined />Back to Admin</button></Link>\r\n        <Form className=\"forminventory\"\r\n            /* {...layout} */\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            user={user}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <div className=\"site-card-border-less-wrapper\" style={{ display: 'flex', padding: '10px', justifyItems: 'center', justifyContent: 'center'   }}>\r\n           \r\n            <Form.Item\r\n            className=\"status\"\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Active',\r\n                    },\r\n                ]}\r\n            >\r\n                \r\n                 <Switch />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                className=\"date\"\r\n                label=\"Elija fecha\"\r\n                name=\"date\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Por favor elija fecha',\r\n                    }\r\n                ]}\r\n                >\r\n                <DatePicker />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"Observations\"\r\n                name=\"observations\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Observaciones...',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"Your Observations\" />\r\n                </Form.Item>\r\n\r\n            </div>\r\n            <div className=\"site-card-border-less-wrapper\" style={{ display: 'flex', padding: '10px', justifyItems: 'center', justifyContent: 'center'   }}>\r\n\r\n            <Form.Item\r\n                label=\"Mark\"\r\n                name=\"mark\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Mark of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"Lenovo\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Model\"\r\n                name=\"model\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Model of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"111q76\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"Serial\"\r\n                name=\"serial\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'serial of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"SR834FY\" />\r\n                </Form.Item>\r\n        \r\n\r\n                <Form.Item\r\n                label=\"SO\"\r\n                name=\"so\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'System Operating of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Select placeholder=\"Please select SO\">\r\n                <Option value=\"windows\">Windows</Option>\r\n                <Option value=\"linux\">Linux</Option>\r\n                <Option value=\"macos\">Mac OS</Option>\r\n                </Select>\r\n                </Form.Item>\r\n\r\n                </div>\r\n\r\n                <div className=\"site-card-border-less-wrapper\" style={{ display: 'flex', padding: '10px', justifyItems: 'center', justifyContent: 'center'    }}>\r\n                \r\n                \r\n\r\n                <Form.Item\r\n                label=\"RAM\"\r\n                name=\"ram\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'ram of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"8GB\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"Processor\"\r\n                name=\"processor\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Processor of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"Intel Core I7\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"Disk\"\r\n                name=\"disk\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Disk or SSD',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"Adata SSD 480GB\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"Price\"\r\n                name=\"price\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Price of computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"1000$\" />\r\n                </Form.Item>\r\n                </div>\r\n\r\n                <div className=\"site-card-border-less-wrapper\" style={{ display: 'flex', padding: '10px', justifyItems: 'center', justifyContent: 'center'    }}>\r\n\r\n                <Form.Item\r\n                label=\"HDV\"\r\n                name=\"hdv\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'HDV Fisic',\r\n                    },\r\n                ]}\r\n                >\r\n                <Select placeholder=\"You have HDV fisic?\">\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n                </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"User\"\r\n                name=\"user\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'User assigned for computer',\r\n                    },\r\n                ]}\r\n                >\r\n                <Input placeholder=\"CONT-01\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                label=\"Notes\"\r\n                name=\"text\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Add Notes of computer',\r\n                    },\r\n                ]}\r\n                >\r\n            <TextArea />\r\n            </Form.Item>\r\n\r\n                </div>\r\n\r\n                <div className=\"site-card-border-less-wrapper\" style={{ display: 'flex', padding: '10px', justifyItems: 'center', justifyContent: 'center'    }}>\r\n\r\n            <Form.Item /* {...tailLayout} */>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Create Inventory\r\n                </Button>\r\n            </Form.Item>\r\n            </div>\r\n            \r\n        </Form>\r\n        </Layout>\r\n      \r\n            \r\n    </>\r\n);}\r\nexport default Inventory;","C:\\Users\\Jhon\\Documents\\frontadmsys\\src\\containers\\ShowInventory\\ShowInventory.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"114","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"110","severity":1,"message":"115","line":5,"column":17,"nodeType":"112","messageId":"113","endLine":5,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":34,"column":10,"nodeType":"118","endLine":34,"endColumn":12,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":40,"column":76,"nodeType":"122","messageId":"123","endLine":40,"endColumn":77},{"ruleId":"120","severity":1,"message":"121","line":41,"column":59,"nodeType":"122","messageId":"123","endLine":41,"endColumn":60},{"ruleId":"110","severity":1,"message":"124","line":11,"column":15,"nodeType":"112","messageId":"113","endLine":11,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":37,"column":11,"nodeType":"127","endLine":37,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":13,"column":16,"nodeType":"118","endLine":13,"endColumn":18,"suggestions":"129"},{"ruleId":"125","severity":1,"message":"126","line":33,"column":11,"nodeType":"127","endLine":33,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":25,"column":77,"nodeType":"122","messageId":"123","endLine":25,"endColumn":78},{"ruleId":"120","severity":1,"message":"121","line":26,"column":59,"nodeType":"122","messageId":"123","endLine":26,"endColumn":60},{"ruleId":"110","severity":1,"message":"130","line":3,"column":24,"nodeType":"112","messageId":"113","endLine":3,"endColumn":34},{"ruleId":"110","severity":1,"message":"131","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":15},{"ruleId":"110","severity":1,"message":"132","line":11,"column":17,"nodeType":"112","messageId":"113","endLine":11,"endColumn":24},{"ruleId":"110","severity":1,"message":"133","line":13,"column":9,"nodeType":"112","messageId":"113","endLine":13,"endColumn":16},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Pagination' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'token' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'tickets'. Either include it or remove the dependency array.",["137"],"'Breadcrumb' is defined but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'SubMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [user]",{"range":"142","text":"143"},"Update the dependencies array to be: [tickets]",{"range":"144","text":"145"},[958,960],"[user]",[541,543],"[tickets]"]